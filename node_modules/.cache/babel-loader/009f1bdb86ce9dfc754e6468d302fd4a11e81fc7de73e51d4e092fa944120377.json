{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\work\\\\src\\\\chapter08\\\\ComfirmButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConfirmButton(props) {\n  _s();\n  const [isConFirmed, setIsConfirmed] = useState(false);\n  const handleConfirm = () => {\n    setIsConfirmed(prevIsComfirmed => !prevIsComfirmed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleConfirm,\n    disabled: isConFirmed,\n    children: isConFirmed ? \"확인됨\" : \"확인하기\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(ConfirmButton, \"aZYgsTOfwSxWjiqf19aiUJ1A4gw=\");\n_c = ConfirmButton;\nexport default ConfirmButton;\n\n// class ConfirmButton extends React.Component{\n//     constructor(props){\n//         super(props);\n\n//         this.state={\n//             isConFirmed : false,\n//         };\n//         //this.handleConfirm=this.handleConfirm.bind(this);\n//         this.handleConfirm = () =>{\n//             this.setState((prevState) =>({\n//                 isConFirmed : !prevState.isConFirmed,\n//             }))\n//         }\n//     }\n\n//     handleConfirm(){\n//         this.setState((prevState) => ({\n//             isConFirmed : !prevState.isConFirmed,\n//         }));\n//     }\n\n//     render(){\n//         return (\n//             <button\n//                 onClick={this.handleConfirm}\n//                 disabled={this.state.isConFirmed}>\n//                 {this.state.isConFirmed? \"확인됨\":\"확인하기\"}\n//             </button>\n//         );\n//     }\n// }\nvar _c;\n$RefreshReg$(_c, \"ConfirmButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConfirmButton","props","_s","isConFirmed","setIsConfirmed","handleConfirm","prevIsComfirmed","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/work/src/chapter08/ComfirmButton.jsx"],"sourcesContent":["import React,{useState} from \"react\";\n\nfunction ConfirmButton(props){\n    const [isConFirmed, setIsConfirmed]=useState(false);\n    const handleConfirm = () =>{\n        setIsConfirmed((prevIsComfirmed) => !prevIsComfirmed);\n    }\n\n    return(\n        <button onClick={handleConfirm} disabled={isConFirmed}>\n            {isConFirmed ? \"확인됨\":\"확인하기\"}\n        </button>\n    )\n}\nexport default ConfirmButton;\n\n\n// class ConfirmButton extends React.Component{\n//     constructor(props){\n//         super(props);\n\n//         this.state={\n//             isConFirmed : false,\n//         };\n//         //this.handleConfirm=this.handleConfirm.bind(this);\n//         this.handleConfirm = () =>{\n//             this.setState((prevState) =>({\n//                 isConFirmed : !prevState.isConFirmed,\n//             }))\n//         }\n//     }\n\n//     handleConfirm(){\n//         this.setState((prevState) => ({\n//             isConFirmed : !prevState.isConFirmed,\n//         }));\n//     }\n\n//     render(){\n//         return (\n//             <button\n//                 onClick={this.handleConfirm}\n//                 disabled={this.state.isConFirmed}>\n//                 {this.state.isConFirmed? \"확인됨\":\"확인하기\"}\n//             </button>\n//         );\n//     }\n// }\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,aAAaA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAACP,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMQ,aAAa,GAAGA,CAAA,KAAK;IACvBD,cAAc,CAAEE,eAAe,IAAK,CAACA,eAAe,CAAC;EACzD,CAAC;EAED,oBACIP,OAAA;IAAQQ,OAAO,EAAEF,aAAc;IAACG,QAAQ,EAAEL,WAAY;IAAAM,QAAA,EACjDN,WAAW,GAAG,KAAK,GAAC;EAAM;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEjB;AAACX,EAAA,CAXQF,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAYtB,eAAeA,aAAa;;AAG5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}