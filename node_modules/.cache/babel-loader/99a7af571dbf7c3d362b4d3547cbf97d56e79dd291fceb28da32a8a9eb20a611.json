{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\work\\\\src\\\\chapter07\\\\Average.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAverage = numbers => {\n  console.log(\"평균값 계산 중\");\n  if (numbers.length === 0) return 0;\n  const sum = numbers.reduce((a, b) => a + b);\n  return sum / numbers.length;\n};\nfunction Average(props) {\n  _s();\n  const [list, setList] = useState([]);\n  const [number, setNumber] = useState('');\n  const inputEl = useRef(null);\n  const onChange = useCallback(e => {\n    setNumber(e.target.value);\n  }, []); // 컴포넌트가 처음  렌더링될 때만 함수 생성\n  const onInsert = useCallback(e => {\n    const nextList = list.concat(parseInt(number));\n    setList(nextList);\n    setNumber('');\n    inputEl.current.focus();\n  }, [number, list]); // number 혹은 list가 변경될 때만 함수 생성\n\n  const avg = useMemo(() => getAverage(list), [list]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: number,\n      onChange: onChange,\n      ref: inputEl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onInsert,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uD3C9\\uADE0\\uAC12 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this), avg]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Average, \"PfAQdRzxj7I8JBut19ZS38R/nEQ=\");\n_c = Average;\nexport default Average;\nvar _c;\n$RefreshReg$(_c, \"Average\");","map":{"version":3,"names":["React","useCallback","useMemo","useState","useRef","jsxDEV","_jsxDEV","getAverage","numbers","console","log","length","sum","reduce","a","b","Average","props","_s","list","setList","number","setNumber","inputEl","onChange","e","target","value","onInsert","nextList","concat","parseInt","current","focus","avg","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","_c","$RefreshReg$"],"sources":["D:/React/work/src/chapter07/Average.jsx"],"sourcesContent":["import React, { useCallback, useMemo, useState,useRef } from \"react\";\n\nconst getAverage= numbers => {\n    console.log(\"평균값 계산 중\");\n    if(numbers.length === 0)return 0;\n    const sum=numbers.reduce((a,b) => a+b);\n    return sum / numbers.length;\n};\n\nfunction Average(props){\n    const [list, setList]=useState([]);\n    const [number, setNumber]=useState('');\n    const inputEl=useRef(null);\n\n    const onChange = useCallback(e =>{\n        setNumber(e.target.value);\n    },[]); // 컴포넌트가 처음  렌더링될 때만 함수 생성\n    const onInsert= useCallback(e =>{\n        const nextList=list.concat(parseInt(number));\n        setList(nextList);\n        setNumber('');\n        inputEl.current.focus();\n    },[number, list]);  // number 혹은 list가 변경될 때만 함수 생성\n\n    const avg=useMemo(() => getAverage(list), [list]);\n\n    return (\n        <div>\n            <input value={number} onChange={onChange} ref={inputEl}/>\n            <button onClick={onInsert}>등록</button>\n            <ul>\n                {list.map((value, index) =>(\n                    <li key={index}>{value}</li>\n                ))}\n            </ul>\n            <div><b>평균값 : </b>{avg}</div>\n        </div>\n    )\n}\nexport default Average;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,EAACC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,UAAU,GAAEC,OAAO,IAAI;EACzBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvB,IAAGF,OAAO,CAACG,MAAM,KAAK,CAAC,EAAC,OAAO,CAAC;EAChC,MAAMC,GAAG,GAACJ,OAAO,CAACK,MAAM,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,GAACC,CAAC,CAAC;EACtC,OAAOH,GAAG,GAAGJ,OAAO,CAACG,MAAM;AAC/B,CAAC;AAED,SAASK,OAAOA,CAACC,KAAK,EAAC;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAACjB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAACnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMoB,OAAO,GAACnB,MAAM,CAAC,IAAI,CAAC;EAE1B,MAAMoB,QAAQ,GAAGvB,WAAW,CAACwB,CAAC,IAAG;IAC7BH,SAAS,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC;EACP,MAAMC,QAAQ,GAAE3B,WAAW,CAACwB,CAAC,IAAG;IAC5B,MAAMI,QAAQ,GAACV,IAAI,CAACW,MAAM,CAACC,QAAQ,CAACV,MAAM,CAAC,CAAC;IAC5CD,OAAO,CAACS,QAAQ,CAAC;IACjBP,SAAS,CAAC,EAAE,CAAC;IACbC,OAAO,CAACS,OAAO,CAACC,KAAK,CAAC,CAAC;EAC3B,CAAC,EAAC,CAACZ,MAAM,EAAEF,IAAI,CAAC,CAAC,CAAC,CAAE;;EAEpB,MAAMe,GAAG,GAAChC,OAAO,CAAC,MAAMK,UAAU,CAACY,IAAI,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEjD,oBACIb,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAOqB,KAAK,EAAEN,MAAO;MAACG,QAAQ,EAAEA,QAAS;MAACY,GAAG,EAAEb;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzDlC,OAAA;MAAQmC,OAAO,EAAEb,QAAS;MAAAO,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtClC,OAAA;MAAA6B,QAAA,EACKhB,IAAI,CAACuB,GAAG,CAAC,CAACf,KAAK,EAAEgB,KAAK,kBACnBrC,OAAA;QAAA6B,QAAA,EAAiBR;MAAK,GAAbgB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLlC,OAAA;MAAA6B,QAAA,gBAAK7B,OAAA;QAAA6B,QAAA,EAAG;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAACN,GAAG;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEd;AAACtB,EAAA,CA7BQF,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA8BhB,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}